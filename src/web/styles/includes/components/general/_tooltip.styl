$silent.tooltip
  // +simplified_bem()
  display inline-block
  position relative
  cursor pointer

  &:after
    border 0.8em solid transparent
    border-width 0.5em 0.4em
    display block
    font-size 1em
    margin-top -.8em
    position absolute
    left calc(100% - 1em)
    top 0.4em
    width 0
    transition: border-top-color .2s ease-in .2s
    content ""
    border-top-color transparent // so we can use transition correctly
    z-index 15
    visibility hidden

    ~/--bottom&
      transform rotate(180deg)
      top initial
      bottom -0.3em

    .is-open&
      border-top-color get-color('primary')
      visibility visible

  &__content
    transform translateY(1em)
    bottom calc(100% + 0.2em) // this will allow tooltip to expand upwards.
    transition transform .3s ease-out, opacity .2s ease-out, z-index 0s linear .3s // make sure tooltip ends up behind the element so it doesn't interefere with anything else
    background get-color('primary')
    display inline-block
    position absolute
    z-index -1
    padding .5em
    border-radius: site.border.radius
    color get-color('white')
    font-size 0.8em
    font-weight: site.font.weight.normal
    white-space nowrap
    right 0
    opacity 0
    font-style: normal // to support common use case of tooltips in icons (typically <i>)

  // this is broken out awkwardly because of the way stylus inheritence works when extending objects.
  // because we use these styles in pseudo selectors, we need to have the __content modifier broken apart to
  // prevent accidentally causing a bad selector (`.foo:before--bottom` isn't a thing.)
  &--bottom &__content
    transform translateY(-1em)
    bottom initial
    top calc(100% + 0.2em) // this will allow tooltip to expand upwards.

  .is-open &__content
    transform translateY(0)
    opacity 1
    transition transform .3s ease-out, opacity .2s ease-out
    z-index 14

  &.is-open
    overflow visible



////
/// @author Jessica Kennedy
/// @page elements/components
////

/// @name Tooltip
/// @description
/// A simple tooltip.
///
/// @markup {html}
/// <!-- Method 1: inline tooltip -->
/// <p class="${@state} js-inm-tooltip">
///   Click here to see an inline tooltip in action.
///   <span class="inm-tooltip__content">Here's the tip!</span>
/// </p>
/// <br>
/// <!-- Method 2: data attribute tooltip -->
/// <p class="${@state} js-inm-tooltip" data-tooltip-content="even better tooltip">
///   Click on this tooltip to see content in a data attribute.
/// </p>
/// <!-- Example using an icon -->
/// <p>
///   This icon has help text... <span class="${@state} js-inm-tooltip"><svg class="inm-icon" aria-hidden="true"><use xlink:href="#inm-icon__help" /></svg><span class="inm-tooltip__content">And it's super useful</span></span>
/// </p>

///# @state {inm-tooltip}
.c-tooltip
  @extends $silent.tooltip

  // also allow data-tooltip-content to work as a tooltip
  &[data-tooltip-content]:before
    @extends .c-tooltip__content
    content attr(data-tooltip-content)

  ///# @state {inm-tooltip--bottom}
  &[data-tooltip-content].c-tooltip--bottom:before
    @extends .c-tooltip--bottom .c-tooltip__content

  &[data-tooltip-content].is-open:before
    @extends .is-open .c-tooltip__content
